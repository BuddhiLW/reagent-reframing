{"version":3,"sources":["reframe_testing/events.cljs"],"mappings":";AASA,AAAA,AAACA,AAEA,AAAA,AAAAC,AAAA,AAAYO,AAAEA;AAAd,AAAA,AAAAN,AAAA;AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAA;;AAAA,AAAAC,AACWK;AADX,AAAA,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAA;;AAAAA;AAAA,AAAAE,AAAAC;AAAA,AAAA,AAAAD;AAAA,AAAYE,AAAEA;AAAd,AACWC;;AAEZ,AAAA,AAACT,AAEA,AAAAU,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASG;AAAT,AAAAF,AAAAD,AAAA,AAAA,AAAoBI;AAApB,AACE,AAAA,AAACC,AAAMH,AAASE;;AAEnB,AAAA,AAACE,AAEA,AAAAC,AAAkBV;AAAlB,AAAA,AAAAW,AAAAD;AAAAC,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAF,AAAA,AAAaN;AAAb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACS,AAAA,AAAA,AAACG,AAAMH,AAIiB,AAAA,AAAA,AAAA,AAACS;;AAUnC,AAAA,AAACtB,AAEA,AAAAuB,AAAKV;AAAL,AAAA,AAAAW,AAAAD;AAAA,AAAAX,AAAAY,AAAA,AAAA,AAAShB;AAATiB,AAAA,AAAAb,AAAAY,AAAA,AAAA;AAAAC,AAAA,AAAAL,AAAAK;AAAA,AAAAJ,AAAAI,AAAA,AAAmBC;AAAnB,AACMb,AACA,AAAA,AAAA,AAACG,AACD,AAAA,AAACA,AAAaU","names":["re_frame.core.reg_event_db","day8.re-frame.tracing/is-trace-enabled?","+debux-dbg-opts+","day8.re-frame.debux.common.util/send-form!","result__34332__auto__","day8.re-frame.debux.common.util/send-trace!","e","e37434","_","reframe-testing.db/default-db","p__37435","vec__37436","cljs.core.nth","db","event-name","val","cljs.core.assoc","re_frame.core.reg_event_fx","p__37439","map__37440","cljs.core/--destructure-map","cljs.core.get","ajax.core/json-response-format","p__37441","vec__37442","map__37445","data"],"sourcesContent":["(ns reframe-testing.events\n  (:require\n   [re-frame.core :as re-frame]\n   [reframe-testing.db :as db]\n   [ajax.core :as ajax]\n   [day8.re-frame.http-fx]\n   [day8.re-frame.tracing :refer-macros [fn-traced]]\n   ))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn-traced [_ _]\n            db/default-db))\n\n(re-frame/reg-event-db\n ::update-name\n (fn [db [event-name val]]\n   (assoc db :name val)))\n\n(re-frame/reg-event-fx      ;; note the trailing -fx\n ::fetch-users              ;; usage:  (dispatch [:handler-with-http])\n (fn [{:keys [db]} _]        ;; the first param will be \"world\"\n   {:db   (assoc db :loading true)   ;; causes the twirly-waiting-dialog to show??\n    :http-xhrio {:method          :get\n                 :uri            \"https://reqres.in/api/users?page=2\" \n                 :timeout         8000    ;; optional see API docs\n                 :response-format (ajax/json-response-format\n                                   {:keywords? true})\n                 ;; IMPORTANT!: You must provide this.\n                 :on-success      [::fetch-users-success]\n                 :on-failure      [:bad-http-result]}}))\n\n;; (-> {}\n;;     (assoc :loading false)\n;;     (assoc :users \"data\"))\n\n(re-frame/reg-event-db\n ::fetch-users-success\n (fn [db [_ {:keys [data]}]]\n   (-> db\n       (assoc :loading false)\n       (assoc :users data))))\n\n"]}